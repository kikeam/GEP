{"version":3,"sources":["components/AddCategorie.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategorie","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","categorie","a","url","encodeURI","fetch","res","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","object","setObject","useEffect","then","setInterval","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,mBAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAe7C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAEEJ,IACAF,GAAc,SAACO,GAAD,OAASL,GAAT,mBAAuBK,OACrCJ,EAAc,MAIlB,SACI,uBAAOK,KAAK,OAAOC,MAAOP,EAAYQ,SAd3B,SAACL,GAClBF,EAAcE,EAAEM,OAAOF,a,uBCHhBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEDI,MAAOF,GAFN,cAEbG,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAIDC,EAAMD,EAAKE,KAAI,SAAAC,GAAG,YACpB,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCFPO,EAAc,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAC7B,OACI,sBAAKI,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEVhC,mBAAS,CACjCmB,KAAK,GACLc,SAAS,IAJyB,mBAE/BC,EAF+B,KAEvBC,EAFuB,KAsBtC,OAfAC,qBAAU,WACNzB,EAAQqB,GACHK,MAAK,SAAApB,GACFqB,aAAY,WACRH,EAAU,CACNhB,KAAMF,EACNgB,SAAS,MAEd,UAGZ,CAACD,IAIGE,EDnBgBK,CAAaP,GAA7Bb,EAF4B,EAE5BA,KAAKc,EAFuB,EAEvBA,QAEZ,OACI,qCACI,6BAAKD,IACJC,GAAS,2CACV,qBAAKL,UAAU,iBAAf,SACKT,EAAKE,KAAI,gBAAEE,EAAF,EAAEA,GAAIT,EAAN,EAAMA,IAAKU,EAAX,EAAWA,MAAX,OACN,cAAC,EAAD,CAAsBV,IAAKA,EAAKU,MAAOA,GAArBD,YEVzBiB,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,YAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAK9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,6BACK0C,EAAWpB,KAAI,SAAAW,GAAQ,OAAG,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCVzDU,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.5b250ecb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategorie = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Add a categorie');\r\n    const handleChange=(e) => {\r\n      setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if (inputValue){\r\n            setCategories((cats)=>[inputValue,...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleChange}/>\r\n            \r\n        </form>\r\n    )\r\n    \r\n}\r\n\r\nAddCategorie.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\n\r\nexport const getGifs = async(categorie) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=nmviO08VdruU76sS8KDSVr2NDYL8boxn&q=${ encodeURI(categorie) }&limit=10`\r\n    const res = await fetch (url)\r\n    const {data} = await res.json()\r\n\r\n    //console.log(data)\r\n    \r\n    const gifs= data.map(gif=>( \r\n        {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        } \r\n    ))\r\n\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({url,title}) => {\r\n    return (\r\n        <div className='card'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data,loading} = useFetchGifs(category)\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading&&<p>loading...</p>}\r\n            <div className='card-container'>\r\n                {data.map(({id, url, title})=>(\r\n                    <GifGridItem key={id} url={url} title={title} />\r\n                ))}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [object, setObject] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(res=>{\r\n                setInterval(() => {\r\n                    setObject({\r\n                        data: res,\r\n                        loading: false\r\n                    })\r\n                }, 3000);\r\n            })\r\n            \r\n    }, [category]);\r\n    \r\n    \r\n    \r\n    return object\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategorie } from './components/AddCategorie';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Pokemon']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategorie setCategories={setCategories}/>\r\n            <hr />\r\n            <ul>\r\n                {categories.map(category=>(<GifGrid key={category} category={category} />))}\r\n            </ul>\r\n         \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}